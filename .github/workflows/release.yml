# This workflow will build a Golang project for Linux and Windows and upload the binaries to Artifacts.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CUAgain release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [amd64, 386]
        include:
          - os: ubuntu-latest
            ext: ""
          - os: windows-latest
            ext: ".exe"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      env:
        GIN_MODE: release
      run: |
        GOOS=${{ matrix.os == 'windows-latest' && echo 'windows' || echo 'linux' }}
        GOARCH=${{ matrix.arch }}
        OUTPUT="app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}"
        go build -v -o $OUTPUT ./...

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}
        path: app-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Run Tests
      run: go test -v ./...
